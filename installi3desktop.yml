---
#---------------------------------------------------------------------
# Install/configure the i3-gaps window manager and associated packages
# Prereqs: Void Linux with ansible and facter installed
#          Existing non root user created with full sudo
#          If your machine is physical, it must have an Nvidia GPU
# Author: five82
# Repo: https://github.com/five82/voidi3config
#
# Thanks to addy-dclxvi for the i3 config
# https://github.com/addy-dclxvi/i3-starterpack
#
# Run the playbook locally as your non root user
# To run: ansible-playbook installi3desktop.yml
#---------------------------------------------------------------------
- hosts: 127.0.0.1
  connection: local
  tasks:

  - name: create user/config directories
    file:
      path: "{{ ansible_user_dir }}/{{ item }}"
      state: directory
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0755
    loop:
      - Documents
      - Downloads
      - Pictures
      - projects
      - Videos
      - .config
      - .config/dunst
      - .config/gtk-3.0
      - .config/i3
      - .config/i3status
      - .fonts
      - .fonts/icomoon
      - .urxvt
      - .urxvt/ext

  - name: copy .bashrc
    copy:
      src: .bashrc
      dest: "{{ ansible_user_dir }}/.bashrc"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0644

  - name: copy .vimrc
    copy:
      src: .vimrc
      dest: "{{ ansible_user_dir }}/.vimrc"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0644

  - name: copy root .vimrc
    copy:
      src: .vimrc
      dest: /root/.vimrc
      owner: root
      group: root
      mode: 0644
    become: yes

  - name: copy .gtkrc-2.0
    copy:
      src: .gtkrc-2.0
      dest: "{{ ansible_user_dir }}/.gtkrc-2.0"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0644

  - name: copy .gtkrc-2.0.mine
    copy:
      src: .gtkrc-2.0.mine
      dest: "{{ ansible_user_dir }}/.gtkrc-2.0.mine"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0644

  - name: copy .Xresources
    copy:
      src: .Xresources
      dest: "{{ ansible_user_dir }}/.Xresources"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0644

  - name: copy .xsettingsd
    copy:
      src: .xsettingsd
      dest: "{{ ansible_user_dir }}/.xsettingsd"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0644


  - name: copy compton.conf
    copy:
      src: .config/compton.conf
      dest: "{{ ansible_user_dir }}/.config/compton.conf"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0644

  - name: copy dunstrc
    copy:
      src: .config/dunst/dunstrc
      dest: "{{ ansible_user_dir }}/.config/dunst/dunstrc"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0644

  - name: copy gtk3 settings.ini
    copy:
      src: .config/gtk-3.0/settings.ini
      dest: "{{ ansible_user_dir }}/.config/gtk-3.0/settings.ini"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0644

  - name: copy i3 config
    copy:
      src: .config/i3/config
      dest: "{{ ansible_user_dir }}/.config/i3/config"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0644

  - name: copy i3status config
    copy:
      src: .config/i3status/config
      dest: "{{ ansible_user_dir }}/.config/i3status/config"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0644

  - name: copy feather.ttf
    copy:
      src: .fonts/icomoon/feather.ttf
      dest: "{{ ansible_user_dir }}/.fonts/icomoon/feather.ttf"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0644

  - name: copy urxvt clipboard
    copy:
      src: .urxvt/ext/clipboard
      dest: "{{ ansible_user_dir }}/.urxvt/ext/clipboard"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0755

  - name: copy urxvt keyboard-select
    copy:
      src: .urxvt/ext/keyboard-select
      dest: "{{ ansible_user_dir }}/.urxvt/ext/keyboard-select"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0755

  - name: copy urxvt url-select
    copy:
      src: .urxvt/ext/url-select
      dest: "{{ ansible_user_dir }}/.urxvt/ext/url-select"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0755

  - name: configure xbps to point to US mirror
    copy:
      src: 00-repository-main.conf
      dest: "/etc/xbps.d/00-repository-main.conf"
      owner: root
      group: root
      mode: 0644
    become: yes

  - name: check if non free repo exists
    stat:
      path=/var/db/xbps/.void-repo-nonfree-files.plist
    register: nonfreerepo

  - name: install void non free repo
    command: xbps-install -Sy void-repo-nonfree
    become: yes
    when: nonfreerepo.stat.islnk is not defined

  - name: upgrade os packages - step 1
    xbps: upgrade=yes
    become: yes

  - name: upgrade os packages - step 2
    xbps: upgrade=yes
    become: yes

  - name: install xorg
    xbps: name=xorg state=latest
    become: yes

  # The xbps module seems to have problems managing multiple packages.
  # So looping through these as a workaround.
  - name: install packages
    xbps: "name={{ item }} state=latest"
    become: yes
    loop:
      - cowsay
      - curl
      - tree
      - vim
      - i3-gaps
      - i3lock
      - i3status
      - compton
      - hsetroot
      - rxvt-unicode
      - xsel
      - rofi
      - xsettingsd
      - lxappearance
      - scrot
      - viewnior
      - noto-fonts-ttf
      - mlocate
      - chromium
      - chromium-widevine
      - sddm
      - alsa-utils
      - spotify
      - numix-themes
      - Thunar
      - docker
      - papirus-icon-theme
      - dmenu
      - ttf-ubuntu-font-family
      - mpv
      - figlet
      - figlet-fonts
      - fortune-mod
      - qt5-graphicaleffects
      - qt5-quickcontrols

  - name: create symlink to enable/start dbus service
    file:
      src: /etc/sv/dbus
      dest: /var/service/dbus
      state: link
    become: yes

  - name: create symlink to enable/start sddm service
    file:
      src: /etc/sv/sddm
      dest: /var/service/sddm
      state: link
    become: yes

  - name: create symlink to enable/start docker service
    file:
      src: /etc/sv/docker
      dest: /var/service/docker
      state: link
    become: yes

  - name: create symlink to enable/start sshd service
    file:
      src: /etc/sv/sshd
      dest: /var/service/sshd
      state: link
    become: yes

  - name: install nvidia proprietary driver
    xbps: name=nvidia state=latest
    become: yes
    when: facter_virtual == "physical"

  - name: install virtualbox guest additions
    xbps: name=virtualbox-ose-guest state=latest
    become: yes
    when: facter_virtual == "virtualbox"

  - name: add user to docker group
    user:
      name: "{{ ansible_user_id }}"
      groups: docker
      append: yes
    become: yes

  - name: --- COMPLETE ---
    debug:
      msg: "Install/update complete."
